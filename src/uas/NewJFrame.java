/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JDialog;
import javax.swing.JFrame;
/**
 *
 * @author ASUS
 */

public class NewJFrame extends javax.swing.JFrame {
    private Connection connection;
    private DefaultTableModel tableModel;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        initializeDatabaseConnection();
        initializeTableModel();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tambah = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        hapus = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        pindahPetugas = new javax.swing.JButton();
        pindahTransaksi = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        output.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "nama", "harga", "stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(output);

        jLabel1.setText("Nama Barang");

        jLabel2.setText("Harga");

        tambah.setText("Tambah Barang");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("DATA BARANG");

        hapus.setBackground(new java.awt.Color(255, 51, 51));
        hapus.setText("Hapus Barang");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(255, 255, 0));
        edit.setText("Edit Barang");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        pindahPetugas.setText("Petugas");
        pindahPetugas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pindahPetugasActionPerformed(evt);
            }
        });

        pindahTransaksi.setText("Transaksi");
        pindahTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pindahTransaksiActionPerformed(evt);
            }
        });

        jLabel4.setText("Stock");

        jLabel5.setText("Pindah Page");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setText("TOKO ABDI JAYA");

        jLabel7.setText("Rp");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addGap(125, 125, 125))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(pindahPetugas)
                            .addGap(18, 18, 18)
                            .addComponent(pindahTransaksi))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                                    .addComponent(jLabel7)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(18, 18, 18)
                                    .addComponent(tambah))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tambah)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit)
                    .addComponent(hapus))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pindahPetugas)
                    .addComponent(pindahTransaksi))
                .addGap(91, 91, 91))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //menambah data
    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:                                      
        String namaBarang = jTextField1.getText();
        String hargaBarangString = jTextField2.getText();
        String stockBarangString = jTextField3.getText();

        if (!namaBarang.isEmpty() && !hargaBarangString.isEmpty() && !stockBarangString.isEmpty()) {
            double hargaBarang = Double.parseDouble(hargaBarangString);
            int stockBarang = Integer.parseInt(stockBarangString);
            // Tambahkan baris baru ke dalam model tabel
            Object[] row = {namaBarang, hargaBarang, stockBarang};
            tableModel.addRow(row);

            // Kosongkan input setelah ditambahkan ke tabel
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");

            // Simpan data ke database
            simpanKeDatabase(namaBarang, hargaBarang, stockBarang);
        } else {
            JOptionPane.showMessageDialog(this, "Isi Nama dan Harga barang terlebih dahulu", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tambahActionPerformed
    //menambah data database
    private void simpanKeDatabase(String namaBarang, double hargaBarang, int stockBarang) {
        String query = "INSERT INTO barang (nama, harga, stock) VALUES (?, ?, ?)";

        try {
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, namaBarang);
            statement.setDouble(2, hargaBarang);
            statement.setInt(3, stockBarang);
            statement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
}
    //koneksi database
    private void initializeDatabaseConnection() {
        String url = "jdbc:mysql://localhost:3306/toko_abdi_jaya";
        String username = "root";
        String password = "";

        try {
            connection = DriverManager.getConnection(url, username, password);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        tambahActionPerformed(evt);
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        tambahActionPerformed(evt);
    }//GEN-LAST:event_jTextField1ActionPerformed
    //hapus data
    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = output.getSelectedRow();
        if (selectedRow != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                hapusDariDatabase(selectedRow);
                tableModel.removeRow(selectedRow);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus terlebih dahulu", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_hapusActionPerformed
    //hapus data database
    private void hapusDariDatabase(int rowIndex) {
        String namaBarang = tableModel.getValueAt(rowIndex, 0).toString();
        double hargaBarang = Double.parseDouble(tableModel.getValueAt(rowIndex, 1).toString());
        int stockBarang = Integer.parseInt(tableModel.getValueAt(rowIndex,2).toString());
        
        String query = "DELETE FROM barang WHERE nama = ? AND harga = ? AND stock = ?";

        try {
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, namaBarang);
            statement.setDouble(2, hargaBarang);
            statement.setInt(3, stockBarang);
            statement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    //edit data
    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        int selectedRow = output.getSelectedRow();
        if (selectedRow != -1) {
            String namaBarang = tableModel.getValueAt(selectedRow, 0).toString();
            String hargaBarang = tableModel.getValueAt(selectedRow, 1).toString();
            String stockBarang = tableModel.getValueAt(selectedRow, 2).toString();

            String namaBarangBaru = JOptionPane.showInputDialog(this, "Masukkan Nama Barang Baru", namaBarang);
            String hargaBarangBaruStr = JOptionPane.showInputDialog(this, "Masukkan Harga yang Baru", hargaBarang);
            double hargaBarangBaru = Double.parseDouble(hargaBarangBaruStr);
            String stockBarangBaruStr = JOptionPane.showInputDialog(this, "Masukkan jumlah stock barang yang Baru", stockBarang);
            int stockBarangBaru = Integer.parseInt(stockBarangBaruStr);

            
            // Perbarui data dalam tabel
            tableModel.setValueAt(namaBarangBaru, selectedRow, 0);
            tableModel.setValueAt(hargaBarangBaru, selectedRow, 1);
            tableModel.setValueAt(stockBarangBaru, selectedRow, 2);

            // Perbarui data dalam database
        updateKeDatabase(namaBarang, Double.parseDouble(hargaBarang),Integer.parseInt(stockBarang), namaBarangBaru, hargaBarangBaru, stockBarangBaru);
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit terlebih dahulu", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }   
    }//GEN-LAST:event_editActionPerformed
    //edit data database
    private void updateKeDatabase(String namaBarang, double hargaBarang,int stockBarang, String namaBarangBaru, double hargaBarangBaru, int stockBarangBaru) {
        String query = "UPDATE barang SET nama = ?, harga = ?, stock = ? WHERE nama = ? AND harga = ? AND stock = ?";

        try {
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, namaBarangBaru);
            statement.setDouble(2, hargaBarangBaru);
            statement.setInt(3, stockBarangBaru);
            statement.setString(4, namaBarang);
            statement.setDouble(5, hargaBarang);
            statement.setInt(6, stockBarang);
            statement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
     }      

//pindah page
    private void pindahPetugasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pindahPetugasActionPerformed
        // TODO add your handling code here:
        JFrame  petugas = new petugas(); 
        this.dispose();

        JDialog dialog = new JDialog(this, "Data Petugas", true);
        dialog.getContentPane().add(petugas.getContentPane());
        dialog.setSize(petugas.getSize());
        dialog.setLocationRelativeTo(this);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        // Menampilkan dialog
        dialog.setVisible(true);
    }//GEN-LAST:event_pindahPetugasActionPerformed
// pindah page
    private void pindahTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pindahTransaksiActionPerformed
        // TODO add your handling code here:
        JFrame  transaksi = new transaksi(); 
        this.dispose();

        JDialog dialog = new JDialog(this, "Transaksi", true);
        dialog.getContentPane().add(transaksi.getContentPane());
        dialog.setSize(transaksi.getSize());
        dialog.setLocationRelativeTo(this);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        // Menampilkan dialog
        dialog.setVisible(true);
    }//GEN-LAST:event_pindahTransaksiActionPerformed
    
      
    
    

    //tabel barang
    private void initializeTableModel() {
        String[] columnNames = {"Nama", "Harga","Stock"};
        tableModel = new DefaultTableModel(columnNames, 0);
        output.setModel(tableModel);
        loadDataFromDatabase();
    }
    //mengambil data
    private void loadDataFromDatabase() {
        String query = "SELECT nama, harga, stock FROM barang";

        try {
            PreparedStatement statement = connection.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            while (resultSet.next()) {
                String namaBarang = resultSet.getString("nama");
                String hargaBarang = resultSet.getString("harga");
                String stockBarang = resultSet.getString("stock");
                Object[] row = {namaBarang, hargaBarang, stockBarang};
                tableModel.addRow(row);
            }

            resultSet.close();
            statement.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new NewJFrame().setVisible(true);
        }
    });
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable output;
    private javax.swing.JButton pindahPetugas;
    private javax.swing.JButton pindahTransaksi;
    private javax.swing.JButton tambah;
    // End of variables declaration//GEN-END:variables
}
